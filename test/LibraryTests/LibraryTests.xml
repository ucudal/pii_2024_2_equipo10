<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LibraryTests</name>
    </assembly>
    <members>
        <member name="T:LibraryTests.AttackTest">
            <summary>
            Test de la clase <see cref="T:Library.Attack"/>
            </summary>
        </member>
        <member name="M:LibraryTests.AttackTest.TestAccuracy0">
            <summary>
            Test del atributo Accuracy en 0.
            </summary>
        </member>
        <member name="M:LibraryTests.AttackTest.TestPower0">
            <summary>
            Test del atributo Power en 0.
            </summary>
        </member>
        <member name="M:LibraryTests.AttackTest.TestNullName">
            <summary>
            Test del nombre nulo
            </summary>
        </member>
        <member name="M:LibraryTests.AttackTest.TestInvalidAccuracy">
            <summary>
            Test de Accuracy invalido.
            </summary>
        </member>
        <member name="M:LibraryTests.AttackTest.TestInvalidPower">
            <summary>
            Test de Power invalido.
            </summary>
        </member>
        <member name="T:LibraryTests.CaterpieTest">
            <summary>
            Test de la clase <see cref="T:Library.Caterpie"/>
            </summary>
        </member>
        <member name="M:LibraryTests.CaterpieTest.TestName">
            <summary>
            Test del atributo name
            </summary>
        </member>
        <member name="M:LibraryTests.CaterpieTest.TestType">
            <summary>
            Test del atributo type
            </summary>
        </member>
        <member name="M:LibraryTests.CaterpieTest.TestLifeAndCurrentLife">
            <summary>
            Test de los atributos life y currentLife
            </summary>
        </member>
        <member name="M:LibraryTests.CaterpieTest.TestIfItHasFourAttacks">
            <summary>
            Test de la cantidad de ataques que tiene Caterpie
            </summary>
        </member>
        <member name="M:LibraryTests.CaterpieTest.TestAddAFifthAttack">
            <summary>
            Test de la limitación de movimientos que tiene Caterpie
            </summary>
        </member>
        <member name="M:LibraryTests.CaterpieTest.TestCurrentStateAndEditState">
            <summary>
            Test del atributo CurrentState y el método EditSate
            </summary>
        </member>
        <member name="M:LibraryTests.CaterpieTest.TestAsleepTurns">
            <summary>
            Test del atributo asleepTurns
            </summary>
        </member>
        <member name="M:LibraryTests.CaterpieTest.TestAttacks">
            <summary>
            Test de los ataques que tiene Caterpie, confirmando que fueron creados correctamente
            </summary>
        </member>
        <member name="M:LibraryTests.CaterpieTest.TestRestoreBaseLifeTakeDamageAndGetLife">
            <summary>
            Test de los métodos RestoreBaseLife, TakeDamage y GetLife
            </summary>
        </member>
        <member name="M:LibraryTests.CaterpieTest.TestFindAttackByName">
            <summary>
            Test del método FindAttackByName
            </summary>
        </member>
        <member name="T:LibraryTests.CharizardTest">
            <summary>
            Test de la clase <see cref="T:Library.Charizard"/>
            </summary>
        </member>
        <member name="M:LibraryTests.CharizardTest.TestName">
            <summary>
            Test del atributo name
            </summary>
        </member>
        <member name="M:LibraryTests.CharizardTest.TestType">
            <summary>
            Test del atributo type
            </summary>
        </member>
        <member name="M:LibraryTests.CharizardTest.TestLifeAndCurrentLife">
            <summary>
            Test de los atributos life y currentLife
            </summary>
        </member>
        <member name="M:LibraryTests.CharizardTest.TestIfItHasFourAttacks">
            <summary>
            Test de la cantidad de ataques que tiene Charizard
            </summary>
        </member>
        <member name="M:LibraryTests.CharizardTest.TestAddAFifthAttack">
            <summary>
            Test de la limitación de movimientos que tiene Charizard
            </summary>
        </member>
        <member name="M:LibraryTests.CharizardTest.TestCurrentStateAndEditState">
            <summary>
            Test del atributo CurrentState y el método EditSate
            </summary>
        </member>
        <member name="M:LibraryTests.CharizardTest.TestAsleepTurns">
            <summary>
            Test del atributo asleepTurns
            </summary>
        </member>
        <member name="M:LibraryTests.CharizardTest.TestAttacks">
            <summary>
            Test de los ataques que tiene Charizard, confirmando que fueron creados correctamente
            </summary>
        </member>
        <member name="M:LibraryTests.CharizardTest.TestRestoreBaseLifeTakeDamageAndGetLife">
            <summary>
            Test de los métodos RestoreBaseLife, TakeDamage y GetLife
            </summary>
        </member>
        <member name="M:LibraryTests.CharizardTest.TestFindAttackByName">
            <summary>
            Test del método FindAttackByName
            </summary>
        </member>
        <member name="T:LibraryTests.ChikoritaTest">
            <summary>
            Test de la clase <see cref="T:Library.Chikorita"/>
            </summary>
        </member>
        <member name="M:LibraryTests.ChikoritaTest.TestName">
            <summary>
            Test del atributo name
            </summary>
        </member>
        <member name="M:LibraryTests.ChikoritaTest.TestType">
            <summary>
            Test del atributo type
            </summary>
        </member>
        <member name="M:LibraryTests.ChikoritaTest.TestLifeAndCurrentLife">
            <summary>
            Test de los atributos life y currentLife
            </summary>
        </member>
        <member name="M:LibraryTests.ChikoritaTest.TestIfItHasFourAttacks">
            <summary>
            Test de la cantidad de ataques que tiene Chikorita
            </summary>
        </member>
        <member name="M:LibraryTests.ChikoritaTest.TestAddAFifthAttack">
            <summary>
            Test de la limitación de movimientos que tiene Chikorita
            </summary>
        </member>
        <member name="M:LibraryTests.ChikoritaTest.TestCurrentStateAndEditState">
            <summary>
            Test del atributo CurrentState y el método EditSate
            </summary>
        </member>
        <member name="M:LibraryTests.ChikoritaTest.TestAsleepTurns">
            <summary>
            Test del atributo asleepTurns
            </summary>
        </member>
        <member name="M:LibraryTests.ChikoritaTest.TestAttacks">
            <summary>
            Test de los ataques que tiene Chikorita, confirmando que fueron creados correctamente
            </summary>
        </member>
        <member name="M:LibraryTests.ChikoritaTest.TestRestoreBaseLifeTakeDamageAndGetLife">
            <summary>
            Test de los métodos RestoreBaseLife, TakeDamage y GetLife
            </summary>
        </member>
        <member name="M:LibraryTests.ChikoritaTest.TestFindAttackByName">
            <summary>
            Test del método FindAttackByName
            </summary>
        </member>
        <member name="T:LibraryTests.FacadeTest">
            <summary>
            Test de la clase <see cref="T:Library.Facade"/>
            </summary>
        </member>
        <member name="M:LibraryTests.FacadeTest.TestUserStory1">
            <summary>
            Test de la historia de usuario 1.
            </summary>
        </member>
        <member name="M:LibraryTests.FacadeTest.TestUserStory2">
            <summary>
            Test de la historia de usuario 2.
            </summary>
        </member>
        <member name="M:LibraryTests.FacadeTest.TestUserStory3">
            <summary>
            Test de la historia de usuario 3.
            </summary>
        </member>
        <member name="M:LibraryTests.FacadeTest.TestUserStory4">
            <summary>
            Test de la historia de usuario 4.
            </summary>
        </member>
        <member name="M:LibraryTests.FacadeTest.TestUserStory5">
            <summary>
            Test de la historia de usuario 5.
            </summary>
        </member>
        <member name="M:LibraryTests.FacadeTest.TestUserStory6">
            <summary>
            Test de la historia de usuario 6.
            </summary>
        </member>
        <member name="M:LibraryTests.FacadeTest.TestUserStory7NotInGame">
            <summary>
            Test de la historia de usuario 7.
            </summary>
        </member>
        <member name="M:LibraryTests.FacadeTest.TestUserStory8">
            <summary>
            Test de la historia de usuario 8.
            </summary>
        </member>
        <member name="M:LibraryTests.FacadeTest.TestUserStory9">
            <summary>
            Test de la historia de usuario 9.
            </summary>
        </member>
        <member name="M:LibraryTests.FacadeTest.TestUserStory10">
            <summary>
            Test de la historia de usuario 10.
            </summary>
        </member>
        <member name="M:LibraryTests.FacadeTest.TestUserStory11">
            <summary>
            Test de la historia de usuario 11.
            </summary>
        </member>
        <member name="T:LibraryTests.FullHealthTest">
            <summary>
            Test de la clase <see cref="T:Library.FullHealth"/>
            </summary>
        </member>
        <member name="M:LibraryTests.FullHealthTest.FullHealthCorrectUse">
            <summary>
            Test de pocion de curacion.
            </summary>
        </member>
        <member name="T:LibraryTests.GameListTest">
            <summary>
            Tests de la clase GameList
            </summary>
        </member>
        <member name="M:LibraryTests.GameListTest.TestAddGame">
            <summary>
            Test del método AddGame
            </summary>
        </member>
        <member name="M:LibraryTests.GameListTest.TestRemoveGame">
             <summary>
            Test del método RemoveGame
             </summary>
        </member>
        <member name="M:LibraryTests.GameListTest.TestFindPlayerByName">
            <summary>
            Test del método FindPlayerBYName
            </summary>
        </member>
        <member name="M:LibraryTests.GameListTest.TestFindGameByPlayer">
            <summary>
            Test del método FindGameByPlayer
            </summary>
        </member>
        <member name="M:LibraryTests.GameListTest.TestGetGameList">
            <summary>
            Test del método GetGameList
            </summary>
        </member>
        <member name="T:LibraryTests.GengarTest">
            <summary>
            Test de la clase <see cref="T:Library.Gengar"/>
            </summary>
        </member>
        <member name="M:LibraryTests.GengarTest.TestName">
            <summary>
            Test del atributo name
            </summary>
        </member>
        <member name="M:LibraryTests.GengarTest.TestType">
            <summary>
            Test del atributo type
            </summary>
        </member>
        <member name="M:LibraryTests.GengarTest.TestLifeAndCurrentLife">
            <summary>
            Test de los atributos life y currentLife
            </summary>
        </member>
        <member name="M:LibraryTests.GengarTest.TestIfItHasFourAttacks">
            <summary>
            Test de la cantidad de ataques que tiene Gengar
            </summary>
        </member>
        <member name="M:LibraryTests.GengarTest.TestAddAFifthAttack">
            <summary>
            Test de la limitación de movimientos que tiene Gengar
            </summary>
        </member>
        <member name="M:LibraryTests.GengarTest.TestCurrentStateAndEditState">
            <summary>
            Test del atributo CurrentState y el método EditSate
            </summary>
        </member>
        <member name="M:LibraryTests.GengarTest.TestAsleepTurns">
            <summary>
            Test del atributo asleepTurns
            </summary>
        </member>
        <member name="M:LibraryTests.GengarTest.TestAttacks">
            <summary>
            Test de los ataques que tiene Gengar, confirmando que fueron creados correctamente
            </summary>
        </member>
        <member name="M:LibraryTests.GengarTest.TestRestoreBaseLifeTakeDamageAndGetLife">
            <summary>
            Test de los métodos RestoreBaseLife, TakeDamage y GetLife
            </summary>
        </member>
        <member name="M:LibraryTests.GengarTest.TestFindAttackByName">
            <summary>
            Test del método FindAttackByName
            </summary>
        </member>
        <member name="T:LibraryTests.HaxorusTest">
            <summary>
            Test de la clase <see cref="T:Library.Haxorus"/>
            </summary>
        </member>
        <member name="M:LibraryTests.HaxorusTest.TestName">
            <summary>
            Test del atributo name
            </summary>
        </member>
        <member name="M:LibraryTests.HaxorusTest.TestType">
            <summary>
            Test del atributo type
            </summary>
        </member>
        <member name="M:LibraryTests.HaxorusTest.TestLifeAndCurrentLife">
            <summary>
            Test de los atributos life y currentLife
            </summary>
        </member>
        <member name="M:LibraryTests.HaxorusTest.TestIfItHasFourAttacks">
            <summary>
            Test de la cantidad de ataques que tiene Haxorus
            </summary>
        </member>
        <member name="M:LibraryTests.HaxorusTest.TestAddAFifthAttack">
            <summary>
            Test de la limitación de movimientos que tiene Haxorus
            </summary>
        </member>
        <member name="M:LibraryTests.HaxorusTest.TestCurrentStateAndEditState">
            <summary>
            Test del atributo CurrentState y el método EditSate
            </summary>
        </member>
        <member name="M:LibraryTests.HaxorusTest.TestAsleepTurns">
            <summary>
            Test del atributo asleepTurns
            </summary>
        </member>
        <member name="M:LibraryTests.HaxorusTest.TestAttacks">
            <summary>
            Test de los ataques que tiene Haxorus, confirmando que fueron creados correctamente
            </summary>
        </member>
        <member name="M:LibraryTests.HaxorusTest.TestRestoreBaseLifeTakeDamageAndGetLife">
            <summary>
            Test de los métodos RestoreBaseLife, TakeDamage y GetLife
            </summary>
        </member>
        <member name="M:LibraryTests.HaxorusTest.TestFindAttackByName">
            <summary>
            Test del método FindAttackByName
            </summary>
        </member>
        <member name="T:LibraryTests.MewtwoTest">
            <summary>
            Test de la clase <see cref="T:Library.Mewtwo"/>
            </summary>
        </member>
        <member name="M:LibraryTests.MewtwoTest.TestName">
            <summary>
            Test del atributo name
            </summary>
        </member>
        <member name="M:LibraryTests.MewtwoTest.TestType">
            <summary>
            Test del atributo type
            </summary>
        </member>
        <member name="M:LibraryTests.MewtwoTest.TestLifeAndCurrentLife">
            <summary>
            Test de los atributos life y currentLife
            </summary>
        </member>
        <member name="M:LibraryTests.MewtwoTest.TestIfItHasFourAttacks">
            <summary>
            Test de la cantidad de ataques que tiene Mewtwo
            </summary>
        </member>
        <member name="M:LibraryTests.MewtwoTest.TestAddAFifthAttack">
            <summary>
            Test de la limitación de movimientos que tiene Mewtwo
            </summary>
        </member>
        <member name="M:LibraryTests.MewtwoTest.TestCurrentStateAndEditState">
            <summary>
            Test del atributo CurrentState y el método EditSate
            </summary>
        </member>
        <member name="M:LibraryTests.MewtwoTest.TestAsleepTurns">
            <summary>
            Test del atributo asleepTurns
            </summary>
        </member>
        <member name="M:LibraryTests.MewtwoTest.TestAttacks">
            <summary>
            Test de los ataques que tiene Mewtwo, confirmando que fueron creados correctamente
            </summary>
        </member>
        <member name="M:LibraryTests.MewtwoTest.TestRestoreBaseLifeTakeDamageAndGetLife">
            <summary>
            Test de los métodos RestoreBaseLife, TakeDamage y GetLife
            </summary>
        </member>
        <member name="M:LibraryTests.MewtwoTest.TestFindAttackByName">
            <summary>
            Test del método FindAttackByName
            </summary>
        </member>
        <member name="T:LibraryTests.ReviveTest">
            <summary>
            Test de la clase <see cref="T:Library.Revive"/>
            </summary>
        </member>
        <member name="M:LibraryTests.ReviveTest.ReviveCorrectUse">
            <summary>
            Test de pocion de revivir.
            </summary>
        </member>
        <member name="T:LibraryTests.SpecialAttackTest">
            <summary>
            Test de la clase <see cref="T:Library.SpecialAttack"/>
            </summary>
        </member>
        <member name="M:LibraryTests.SpecialAttackTest.TestSpecialAttack">
            <summary>
            Test de ataque especial.
            </summary>
        </member>
        <member name="M:LibraryTests.StateLogicTest.AsleepEffectDecreasesTurnsAndReturnsTrue">
            <summary>
            Verifica que la lógica de AsleepEffect disminuya correctamente los AsleepTurn
            del Pokemon y devuelva true si aún está dormido.
            /// </summary>
        </member>
        <member name="M:LibraryTests.StateLogicTest.AsleepEffectWakesPokemonAndReturnsFalse">
            <summary>
            Verifica que la lógica de AsleepEffect despierte al Pokemon 
            (estableciendo su estado en null) y devuelva false si su AsleepTurns llega a 0.    /// </summary>
        </member>
        <member name="M:LibraryTests.StateLogicTest.AsleepEffectIsNotSet">
            Verifica que AsleepEffect devuelva false si el Pokemon no está dormido.
        </member>
        <member name="M:LibraryTests.StateLogicTest.ParalizedEffectRandomness">
            <summary>
            Verifica que la probabilidad de que ParalizedEffect devuelva true 
            se mantenga  dentro del rango esperado (25% con tolerancia).
            </summary>
        </member>
        <member name="M:LibraryTests.StateLogicTest.PoisonedEffectDecreasesLife">
            <summary>
            Verifica que PoisonedEffect reduzca correctamente la vida actual de un Pokemon envenenado,
            basado en su vida base.
            </summary>
        </member>
        <member name="M:LibraryTests.StateLogicTest.BurnedEffectDecreaseLife">
            <summary>
            Verifica que BurnedEffect reduzca correctamente la vida actual de un Pokemon quemado,
            basado en su vida base.
            </summary>
        </member>
        <member name="T:LibraryTests.SuperPotionTest">
            <summary>
            Test de la clase <see cref="T:Library.SuperPotion"/>
            </summary>
        </member>
        <member name="M:LibraryTests.SuperPotionTest.SuperPotionCorrectUse1">
            <summary>
            Verifica que SuperPotion recupere correctamente 70HP de un Pokemon después de recibir 60 puntos de daño,
            llevando su vida a su valor inicial.
            </summary>
        </member>
        <member name="M:LibraryTests.SuperPotionTest.SuperPotionCorrectUse2">
            <summary>
            Verifica que SuperPotion recupere correctamente 70HP de un Pokemon después de recibir 80 puntos de daño.
            </summary>
        </member>
        <member name="M:LibraryTests.SuperPotionTest.SuperPotionHealthyPokemonUse">
            <summary>
            Verifica que SuperPotion no tenga efecto si el Pokemon ya tiene su vida completa,
            y que la vida del Pokemon no haya cambiado.
            </summary>
        </member>
        <member name="M:LibraryTests.SuperPotionTest.NullPokemonTest">
            <summary>
            Verifica que al intentar usar SuperPotion con un Pokemon nulo, el resultado sea nulo.
            </summary>
        </member>
        <member name="T:LibraryTests.WaitingListTest">
            <summary>
            Tests de la clase WaitingList
            </summary>
        </member>
        <member name="M:LibraryTests.WaitingListTest.TestAddPlayer">
            <summary>
            Test del método AddPlayer
            </summary>
        </member>
        <member name="M:LibraryTests.WaitingListTest.TestRemovePlayer">
            <summary>
            Test del método RemovePlayer
            </summary>
        </member>
        <member name="M:LibraryTests.WaitingListTest.TestFindPlayerByName">
            <summary>
            Test del método FindPlayerByName
            </summary>
        </member>
        <member name="M:LibraryTests.WaitingListTest.TestGetSomeone">
            <summary>
            Test del método GetSomeone
            </summary>
        </member>
        <member name="M:LibraryTests.WaitingListTest.TestGetWaitingList">
            <summary>
            Test del método GetWaitingList
            </summary>
        </member>
        <member name="T:LibraryTests.ZeraoraTest">
            <summary>
            Test de la clase <see cref="T:Library.Zeraora"/>
            </summary>
        </member>
        <member name="M:LibraryTests.ZeraoraTest.TestName">
            <summary>
            Test del atributo name
            </summary>
        </member>
        <member name="M:LibraryTests.ZeraoraTest.TestType">
            <summary>
            Test del atributo type
            </summary>
        </member>
        <member name="M:LibraryTests.ZeraoraTest.TestLifeAndCurrentLife">
            <summary>
            Test de los atributos life y currentLife
            </summary>
        </member>
        <member name="M:LibraryTests.ZeraoraTest.TestIfItHasFourAttacks">
            <summary>
            Test de la cantidad de ataques que tiene Zeraora
            </summary>
        </member>
        <member name="M:LibraryTests.ZeraoraTest.TestAddAFifthAttack">
            <summary>
            Test de la limitación de movimientos que tiene Zeraora
            </summary>
        </member>
        <member name="M:LibraryTests.ZeraoraTest.TestCurrentStateAndEditState">
            <summary>
            Test del atributo CurrentState y el método EditSate
            </summary>
        </member>
        <member name="M:LibraryTests.ZeraoraTest.TestAsleepTurns">
            <summary>
            Test del atributo asleepTurns
            </summary>
        </member>
        <member name="M:LibraryTests.ZeraoraTest.TestAttacks">
            <summary>
            Test de los ataques que tiene Zeraora, confirmando que fueron creados correctamente
            </summary>
        </member>
        <member name="M:LibraryTests.ZeraoraTest.TestRestoreBaseLifeTakeDamageAndGetLife">
            <summary>
            Test de los métodos RestoreBaseLife, TakeDamage y GetLife
            </summary>
        </member>
        <member name="M:LibraryTests.ZeraoraTest.TestFindAttackByName">
            <summary>
            Test del método FindAttackByName
            </summary>
        </member>
    </members>
</doc>
